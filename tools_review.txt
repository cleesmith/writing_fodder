Each script/tool is inspired by key chapters or central ideas in 
"Steering the Craft" by Ursula Le Guin. The real magic is how 
you use them in an editorial pass—always trusting your artistic 
instincts over any black-and-white “rule.” 
She repeatedly reminds us that awareness is the real goal, through 
reading and reading aloud: 
    once you hear a problem, you can decide if/how to fix it
In every tool, consider including a suggestion to read 
flagged sentences/paragraphs aloud.
Much of her advice returns to:
    sound and flow of prose

Writer Toolkit scripts:

- Rough Draft Writing:
    * for all of these tools the more original self-writing you 
      can provide the better, even if it is way more "rough draft" 
      than the AI's writing 
1. brainstorm.py
2. outline_writer.py
3. world_writer.py
4. chapters_from_outline.py
5. chapter_writer.py

- Editing and Rewriting:
 1. character_analyzer.py
        - manuscript, outline, and world file analysis utility for
        identifying and comparing character appearances. It extracts
        a master character list that details which files each
        character appears in, examines consistency across documents,
        and highlights discrepancies in names, roles, or
        relationships. The analysis produces a detailed report with
        sections and recommendations to improve character coherence.
        This is needed because AI draft writing adds new characters!

 2. tense_consistency_checker.py
        - manuscript analysis utility for evaluating verb tense
        consistency. It identifies shifts between past and present
        tense that might confuse readers, focusing on unintentional
        changes in narrative flow. With customizable analysis levels
        and configurable chapter markers, it generates a detailed
        report with examples, explanations, and suggestions for
        improving consistency.

 3. adjective_adverb_optimizer.py
        - analyzes manuscript adjective and adverb usage to pinpoint
        unnecessary modifiers and overused qualifiers, offering
        specific suggestions for replacing weak descriptive patterns
        with stronger verbs and nouns, in line with Ursula K. 
        Le Guin's guidance.

 4. dangling_modifier_checker.py
        - manuscript analysis software that detects dangling and
        misplaced modifiers. It examines text to pinpoint instances
        where descriptive phrases don’t logically connect to their
        intended subjects, potentially causing confusion or
        unintended humor. With customizable analysis level,
        sensitivity, and specific modifier types, it generates a
        detailed report complete with examples, explanations, and
        revision suggestions to enhance clarity and precision.

 5. rhythm_analyzer.py
        - manuscript analysis utility for evaluating the rhythm and flow
        of prose. It measures sentence length variations, detects
        monotonous patterns, and highlights sections where the
        writing’s rhythm doesn’t match the intended mood.
        Configurable analysis levels, selectable scene types, and
        adjustable sensitivity settings allow it to generate a
        detailed report with examples, explanations, and suggestions
        for enhancing overall narrative rhythm.

 6. crowding_leaping_evaluator.py
        - manuscript pacing evaluator that examines narrative structure
        for pacing issues. It identifies overly dense sections
        ("crowding") and abrupt transitions or time jumps
        ("leaping") based on concepts inspired by Ursula K. Le Guin.
        With configurable analysis levels and sensitivity settings,
        it produces a detailed report—including optional text-based
        visualizations—that offers feedback and suggestions for
        improving narrative rhythm and clarity.

 7. punctuation_auditor.py
        - manuscript analysis utility focused on evaluating punctuation
        effectiveness. It detects issues such as run-on sentences,
        missing commas, and irregular punctuation patterns that may
        hinder clarity and flow. Configurable analysis levels,
        strictness settings, and selectable punctuation elements
        enable it to generate a detailed report with examples,
        explanations, and recommendations for enhancing punctuation
        and overall readability.

 8. consistency_checker.py (uses: outline, world, manuscript)
        - manuscript consistency checker utility that compares a manuscript
        against a world document (and optionally an outline). It supports
        various consistency checks—world, internal, development, and
        unresolved—and automatically strips Markdown formatting from
        responses. Configurable options enable targeted analysis of
        character, setting, timeline, and thematic consistency, producing
        detailed reports with examples and recommendations for resolving
        discrepancies.

 9. conflict_analyzer.py
        - manuscript conflict analysis utility that examines conflict
        patterns at different narrative levels. It identifies
        conflict nature, escalation, and resolution at scene,
        chapter, and arc levels. With customizable analysis levels
        and selectable conflict types, it produces a detailed report
        featuring examples, assessments, and recommendations for
        strengthening narrative tension and coherence.

10. foreshadowing_tracker.py
        - manuscript analysis utility for identifying foreshadowing
        elements and tracking their payoffs. It pinpoints explicit
        clues, subtle hints, and Chekhov's Gun elements to evaluate
        how well narrative setups are resolved. With customizable
        options to select foreshadowing types and organization modes
        (chronological or by type), it generates detailed reports
        featuring examples, assessments, and recommendations for
        fulfilling narrative promises.

11. plot_thread_tracker.py
        - manuscript analysis utility for identifying and tracking
        distinct plot threads—revealing how they interconnect,
        converge, and diverge throughout the narrative. It uses
        text-based representations (with optional ASCII art
        visualization) and supports configurable analysis depth
        (basic, detailed, or comprehensive) to produce detailed
        reports with progression maps, thread connections, and
        narrative assessments, including manuscript excerpts and
        recommendations for strengthening the plot architecture.



Claude Chat Export - 3/23/2025, 4:45:19 PM

Source: https://claude.ai/chat/90622930-5d6d-49ad-ac6e-b33f15a1f2f2

Evaluated AI tool's potential for catching fiction writing errors.

This person has shared a document containing prompts and templates for
using AI to check for continuity and consistency issues in creative
fiction writing. They seem to be asking for my thoughts on whether
this would be a valuable addition to their writer's toolkit.

I notice there are user preferences stating "Never respond with
Markdown formatting, plain text only" and there's a user style that
suggests I should give thorough explanations like a teacher, breaking
down complex ideas.

Let me go through the document content to fully understand what it's
proposing:

The document outlines several prompt templates that could be used with
an AI to help writers detect:
- continuity errors
- contradictions
- plot holes in their manuscripts

The templates include:

• Summarizing key details from each chapter/section

• Comparing summaries to detect contradictions

• Checking timeline and event ordering

• Ensuring character consistency

• Detecting logic/plot holes

• Identifying unresolved elements ("Chekhov's Gun")

• Checking for knowledge/POV violations

• Summarizing issues and suggesting corrections

The person is asking whether this approach would be worth adding to
their writer's toolkit.

I should provide my thoughts on whether this approach would be
valuable for writers, considering factors like:

• Effectiveness for finding continuity errors

• Time efficiency compared to manual methods

• Potential limitations

• How it might complement other editing processes

I'll aim to be thorough but express my thoughts in plain text without
Markdown formatting, as per the user preferences.

From what I see in this document, these prompt templates offer a
systematic approach to catching common narrative inconsistencies that
writers often struggle with. As an avid writer myself, I find these
incredibly valuable for several reasons:

First, continuity errors are notoriously difficult to catch in your
own work. Our brains tend to fill in gaps because we know what we
intended, making it hard to spot when a character's eye color changes
or timeline details don't align. These structured prompts create a
methodical approach that's more thorough than most human first-pass
editing.

The categorization is particularly smart - breaking consistency
checking into distinct types (character details, plot logic,
timelines, unresolved elements, etc.) allows for focused analysis
rather than trying to catch everything at once.

I especially value the "Chekhov's Gun" check. Nothing frustrates
readers more than introduced elements that never pay off, yet these
are often invisible to authors who may have cut related scenes or
changed direction during drafting.

Compared to traditional methods, this approach offers significant
advantages:

• It's more systematic than manual continuity sheets which often
  become outdated

• It doesn't rely solely on beta readers who might miss technical
  issues while focusing on enjoyment

• It creates a "fact world" automatically as you write, rather than
  requiring you to maintain one separately

One caution: AI analysis works best as a supplement to human editing,
not a replacement. The document acknowledges this with the "Human
Review" tip, which is important. Some continuity issues might involve
subtle thematic elements an AI could miss.

Overall, I'd say this is absolutely worth adding to a writer's
toolkit. It turns what's traditionally been one of the most tedious
aspects of editing into a more structured, efficient process. I'd
recommend testing it on a completed short story first to see how it
works with your particular writing style before applying it to a full
novel.


AI: 
<thinking>
Strategized targeted continuity checking for comprehensive world
document.

- The user is trying to develop an efficient approach for continuity
checking, noting that their thinking budget is 32K+, which is quite
large, and they want to avoid redundant work across multiple
prompts.

- They previously shared a chapter generation prompt structure that
uses:

=== OUTLINE ===
{outlinecontent}
=== END OUTLINE ===

=== WORLD ===
{worldcontent}
=== END WORLD ===

=== EXISTING MANUSCRIPT ===
{novelcontent}
=== END EXISTING MANUSCRIPT ===

- The world document they've shared is extremely detailed,
containing:

• Setting descriptions

• Social structures

• History

• Technology systems

• Economic systems

• Themes and symbols

• Rules of the world

• Detailed character profiles

Looking at this, I can see they're right that their world.txt file
already contains much of what would go into the "Phase 1:
Comprehensive Fact World Generation" that I suggested. It's highly
detailed with character relationships, timelines, locations, and
world rules.

What they're asking for now is an efficient approach to continuity
checking that doesn't repeat work, given they already have this
comprehensive world document.

I need to:

- Acknowledge the comprehensive nature of their world document

- Propose an optimized workflow for continuity checking that takes
advantage of their existing world documentation

- Suggest specific prompts that build on rather than duplicate their
existing material

- Structure this for their large thinking budget while avoiding
redundant analysis

My approach will be to suggest a more selective, targeted analysis
system that assumes the world.txt is the source of truth and focuses
on checking manuscript consistency against this established world.

You're right that your world.txt file is already an excellent fact
world - it's remarkably comprehensive and well-structured. With your
32K+ thinking budget, we can optimize the continuity checking process
to avoid redundant work while thoroughly analyzing your manuscript.

Here's a more efficient approach that treats your world.txt as the
established source of truth:
</thinking>


1. Manuscript-to-World Consistency Check

=== OUTLINE ===
{outlinecontent}
=== END OUTLINE ===

=== WORLD ===
{worldcontent}
=== END WORLD ===

=== MANUSCRIPT ===
{manuscriptcontent}
=== END MANUSCRIPT ===

You are an expert fiction editor with exceptional attention to detail.
Using the WORLD document as the established source of truth, analyze
the MANUSCRIPT for any inconsistencies or contradictions with the
established facts. Focus on:

1. CHARACTER CONSISTENCY:
   - Are characters acting in ways that match their established
     personality traits?
   - Does dialogue reflect their documented speech patterns and
     knowledge level?
   - Are relationships developing consistently with established
     dynamics?
   - Are physical descriptions matching those in the WORLD document?

2. SETTING & WORLD CONSISTENCY:
   - Are locations described consistently with their established
     features?
   - Does the manuscript respect the established rules of the world?

3. TIMELINE COHERENCE:
   - Does the manuscript respect the established historical events and
     their sequence?
   - Are there any temporal contradictions with established dates?
   - Is character knowledge appropriate for their place in the
     timeline?
   - Are seasonal elements consistent with the story's temporal
     placement?

4. THEMATIC INTEGRITY:
   - Are the established themes being consistently developed?
   - Are symbolic elements
     used consistently with their established meanings?

For each inconsistency, provide:
- The specific element in the manuscript that contradicts the WORLD
- The established fact in the WORLD it contradicts
- The location in the manuscript where this occurs using verbatim text
- A suggested correction that would maintain narrative integrity

Use the extensive thinking space to thoroughly cross-reference the
manuscript against the story's world before identifying issues.


2. Internal Manuscript Consistency Check

=== MANUSCRIPT ===
{manuscriptcontent}
=== END MANUSCRIPT ===

You are an expert fiction editor focusing on internal narrative
consistency. Analyze the MANUSCRIPT to identify elements that are
internally inconsistent or contradictory, regardless of the
established story world. Focus on:

1. NARRATIVE CONTINUITY:
   - Events that contradict earlier established facts within the
     manuscript itself
   - Description inconsistencies (characters, objects, settings
     changing without explanation)
   - Dialogue that contradicts earlier statements by the same
     character
   - Emotional arcs that show sudden shifts without sufficient
     development

2. SCENE-TO-SCENE COHERENCE:
   - Physical positioning and transitions between locations
   - Time of day and lighting inconsistencies
   - Character presence/absence in scenes without explanation
   - Weather or environmental conditions that change illogically

3. PLOT LOGIC:
   - Character motivations that seem inconsistent with their actions
   - Convenient coincidences that strain credibility
   - Information that characters possess without logical means of
     acquisition
   - Plot developments that contradict earlier established rules or
     limitations

4. POV CONSISTENCY:
   - Shifts in viewpoint that break established narrative patterns
   - Knowledge revealed that the POV character couldn't logically
     possess
   - Tone or voice inconsistencies within the same POV sections

For each issue found, provide:
- The specific inconsistency with exact manuscript locations
- Why it creates a continuity problem
- A suggested revision approach


3. Progression & Development Tracking

=== OUTLINE ===
{outlinecontent}
=== END OUTLINE ===

=== WORLD ===
{worldcontent}
=== END WORLD ===

=== MANUSCRIPT ===
{manuscriptcontent}
=== END MANUSCRIPT ===

You are an expert fiction editor analyzing character and plot
development. Track how key elements evolve throughout the manuscript
and identify any development issues:

1. CHARACTER ARC TRACKING:
   - For each major character,
     trace their development through the manuscript
   - Identify key transformation moments and their emotional
     progression
   - Highlight any character development that feels rushed, stalled,
     or inconsistent
   - Note if their arc is following the trajectory established in the
     WORLD document

2. MYSTERY DEVELOPMENT:
   - Track the progression of the central mystery
   - Ensure clues are being revealed at an appropriate pace
   - Identify any critical information that's missing or presented out
     of logical sequence
   - Check if red herrings and misdirections are properly balanced
     with genuine progress

3. RELATIONSHIP EVOLUTION:
   - Track how key relationships develop
   - Ensure relationship changes are properly motivated and paced
   - Identify any significant jumps in relationship dynamics that need
     development

4. THEME DEVELOPMENT:
   - Track how the core themes from the WORLD document are being
     developed
   - Identify opportunities to strengthen thematic elements
   - Note if any established themes are being neglected

Provide a structured analysis showing the progression points for each
tracked element, identifying any gaps, pacing issues, or development
opportunities.


4. Unresolved Elements & Setup Payoff Check

=== MANUSCRIPT ===
{manuscriptcontent}
=== END MANUSCRIPT ===

You are an expert fiction editor specializing in narrative
completeness. Analyze the MANUSCRIPT to identify elements that have
been set up but not resolved:

1. UNRESOLVED PLOT ELEMENTS:
   - Mysteries or questions raised but not answered
   - Conflicts introduced but not addressed
   - Promises made to the reader (through foreshadowing or explicit
     setup) without payoff
   - Character goals established but not pursued

2. CHEKHOV'S GUNS:
   - Significant objects introduced but not used
   - Skills or abilities established but never employed
   - Locations described in detail but not utilized in the plot
   - Information revealed but not made relevant

3. CHARACTER THREADS:
   - Side character arcs that begin but don't complete
   - Character-specific conflicts that don't reach resolution
   - Backstory elements introduced but not integrated into the main
     narrative
   - Relationship dynamics that are established but not developed


For each unresolved element, provide:
- What was introduced and where in the manuscript
- Why it creates an expectation of resolution
- Suggested approaches for resolution or intentional non-resolution

Implementation Strategy 
Given your comprehensive world.txt and large thinking budget, 
I recommend this approach:

1. Run the Manuscript-to-World Consistency Check first - this
leverages your existing World and ensures the manuscript
adheres to it

2. Then run the Internal Manuscript Consistency Check - this
identifies issues within the manuscript that might not directly
contradict your World but still create inconsistencies

3. Use the Progression & Development Tracking to ensure character arcs
and plot development are on track throughout the manuscript

4. Finally, run the Unresolved Elements check to catch any dangling
threads or unfulfilled setups

This sequential approach:

• Avoids redundant extraction of world details that are already
  documented

• Maximizes your thinking budget for deep analysis rather than
  re-cataloging

• Provides targeted, specific feedback for different types of
  consistency issues

• Creates a logical workflow from broad consistency to specific
  narrative elements

The overall structure respects your established formatting conventions
while focusing the analysis on finding meaningful issues rather than
repeating what you already know.

